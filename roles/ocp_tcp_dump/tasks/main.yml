---
- name: OCP | TCP Dump Role | Log in (obtain access token)
  k8s_auth:
    username: "{{ ocp_username }}"
    password: "{{ ocp_password }}"
    host: "{{ api_url }}"
    verify_ssl: "{{ ocp_verify_ssl }}"
  register: k8s_auth_results
  when: (ocp_token is not defined or ocp_token == "")

- name: OCP | TCP Dump | Set the OCP API token value
  set_fact:  
    token: "{% if ocp_token is defined and ocp_token != '' %}{{ ocp_token }} {% else %}{{ k8s_auth_results.k8s_auth.api_key }}{% endif %}"
  no_log: true

- name: OCP | TCP Dump | Check if the deployment exists and get the label
  k8s_info:
    api_key: "{{ token }}"
    host: "{{ api_url }}"
    verify_ssl: "{{ ocp_verify_ssl }}"
    api_version: apps/v1
    kind: Deployment
    name: "{{ deployment_name }}"
    namespace: "{{ project_name }}"
  register: get_label

- name: OCP | TCP Dump | Get pod and node names with label selector
  k8s_info:
    api_key: "{{ token }}"
    host: "{{ api_url }}"
    verify_ssl: "{{ ocp_verify_ssl }}"
    api_version: v1
    kind: Pod
    namespace: "{{ project_name }}"
    label_selectors:
      - "app = {{ get_label | json_query('resources[*].spec.selector.matchLabels.app') | join(',') }}"
  register: check_deployment_exist

- set_fact:
    pods_and_nodes: "{{ check_deployment_exist | json_query(label_query) }}"
  vars:
    label_query: "resources[*].{pod_name: metadata.name, node_name: spec.nodeName}"

- name: OCP | TCP Dump Role | Create Debugger Pod
  k8s:
    api_key: "{{ token }}"
    host: "{{ api_url }}"
    verify_ssl: "{{ ocp_verify_ssl }}"
    state: present
    definition: "{{ lookup('template', 'debugger-pod.yml.j2') | from_yaml }}"
    force: true
    validate:
      fail_on_error: no
      strict: yes
  with_items: "{{ pods_and_nodes }}"

- name: OCP | TCP Dump | Check if pods' done taking dumps
  k8s_info:
    api_key: "{{ token }}"
    host: "{{ api_url }}"
    verify_ssl: "{{ ocp_verify_ssl }}"
    api_version: v1
    kind: Pod
    namespace: default
    name: "{{ item.pod_name }}-{{ ansible_role_name | replace('_', '-') }}-{{ tower_job_id }}"
  register: check_debugger_pod_status
  with_items: "{{ pods_and_nodes }}"
  failed_when: "'Failed' in check_debugger_pod_status | json_query('resources[*].status.phase')"
  until: check_debugger_pod_status | json_query('resources[*].status.phase') == "Succeeded"
  delay: "{{ execution_time|int + 5 }}"
  retries: 1

# Task for deleting Debugger Pod
- name: OCP | TCP Dump Role | Delete Debugger Pod
  k8s:
    api_key: "{{ token }}"
    host: "{{ api_url }}"
    verify_ssl: "{{ ocp_verify_ssl }}"
    state: absent
    definition:
      apiVersion: v1
      kind: Pod
      metadata:
        name: "{{ item.pod_name }}-{{ ansible_role_name | replace('_', '-') }}-{{ tower_job_id }}"
        namespace: default
  with_items: "{{ pods_and_nodes }}"

